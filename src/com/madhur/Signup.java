/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.madhur;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author 91940
 */
public class Signup extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    private Connection connection;
    private PreparedStatement preparedStatement;

    public Signup() throws ClassNotFoundException, SQLException {
        initComponents();
        Class.forName("com.mysql.cj.jdbc.Driver");
        connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/bms", "root", "1234");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        username = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        username1 = new javax.swing.JLabel();
        username2 = new javax.swing.JLabel();
        enterUsername = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        username3 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        username4 = new javax.swing.JLabel();
        username5 = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        username6 = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        username7 = new javax.swing.JLabel();
        lastname = new javax.swing.JTextField();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        gender = new javax.swing.JLabel();
        other = new javax.swing.JRadioButton();
        confrimpassword = new javax.swing.JPasswordField();
        password = new javax.swing.JPasswordField();
        username8 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        username9 = new javax.swing.JLabel();
        openingbalance = new javax.swing.JTextField();
        username10 = new javax.swing.JLabel();
        adharcard = new javax.swing.JTextField();
        username11 = new javax.swing.JLabel();
        xyz = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pin = new javax.swing.JPasswordField();
        home_page = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        dob = new com.toedter.calendar.JDateChooser();

        username.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        username.setText("username:-");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 51));

        username1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username1.setText("*Username:-");

        username2.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username2.setText("*Confrim Password:-");

        enterUsername.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        enterUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterUsernameActionPerformed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        username3.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username3.setText("*Password:-");

        email.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        username4.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username4.setText("*Mobile Number:-");

        username5.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username5.setText("*Email Id:-");

        firstname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameActionPerformed(evt);
            }
        });

        username6.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username6.setText("*First Name:-");

        mobile.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileActionPerformed(evt);
            }
        });

        username7.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username7.setText("*Last Name:-");

        lastname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameActionPerformed(evt);
            }
        });

        buttonGroup1.add(female);
        female.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(male);
        male.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        gender.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        gender.setText("Gender:-");

        buttonGroup1.add(other);
        other.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        other.setText("Other");
        other.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherActionPerformed(evt);
            }
        });

        confrimpassword.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        password.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        username8.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username8.setText("*Permanent Address:-");

        address.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        username9.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username9.setText("*Opening Balance:-");

        openingbalance.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        openingbalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openingbalanceActionPerformed(evt);
            }
        });

        username10.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username10.setText("*Adhar Card Number:-");

        adharcard.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        adharcard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adharcardActionPerformed(evt);
            }
        });

        username11.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        username11.setText("Rupees");

        xyz.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        xyz.setText("*Date Of Birth:-");

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/madhur/back.png"))); // NOI18N
        back.setBorderPainted(false);
        back.setContentAreaFilled(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setText("*Pin:-");

        pin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        home_page.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        home_page.setText("Sign Up");

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setAlignmentX(1.0F);
        jSeparator2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        dob.setDateFormatString("dd-MM-yyyy");
        dob.setMaximumSize(new java.awt.Dimension(50, 50));
        dob.setPreferredSize(new java.awt.Dimension(5, 33));
        dob.setRequestFocusEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(username8)
                        .addGap(34, 34, 34)
                        .addComponent(address)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(gender)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(male))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(username2)
                                                .addComponent(username6)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(mobile, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                                        .addComponent(enterUsername)
                                                        .addComponent(confrimpassword))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(34, 34, 34)
                                                .addComponent(female)
                                                .addGap(34, 34, 34)
                                                .addComponent(other)))
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(username3)
                                            .addComponent(username7)
                                            .addComponent(username5)
                                            .addComponent(xyz)
                                            .addComponent(jLabel1)))
                                    .addComponent(username1))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pin, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lastname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                    .addComponent(email, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(password, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                    .addComponent(dob, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(username9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username10, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(openingbalance)
                                    .addComponent(adharcard, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(username11))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(back)
                                .addGap(240, 240, 240)
                                .addComponent(submit)
                                .addGap(18, 18, 18)
                                .addComponent(reset)))
                        .addGap(0, 49, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2)
                    .addComponent(home_page))
                .addGap(430, 430, 430))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(home_page)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(username3)
                        .addComponent(enterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(username1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username2)
                    .addComponent(confrimpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(pin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username6)
                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username7))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username4)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username5)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gender)
                            .addComponent(male)
                            .addComponent(female)
                            .addComponent(other)
                            .addComponent(xyz))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username8)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username10)
                    .addComponent(adharcard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username9)
                    .addComponent(openingbalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username11))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(submit)
                        .addComponent(reset))
                    .addComponent(back))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterUsernameActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameActionPerformed

    private void mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileActionPerformed

    private void lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed

    private void otherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void openingbalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openingbalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openingbalanceActionPerformed

    private void adharcardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adharcardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adharcardActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

        if (!enterUsername.getText().isEmpty() && !password.getText().isEmpty() && !firstname.getText().isEmpty() && !pin.getText().isEmpty() && !lastname.getText().isEmpty() && !email.getText().isEmpty() && !mobile.getText().isEmpty() && !address.getText().isEmpty() && !adharcard.getText().isEmpty() && !confrimpassword.getText().isEmpty() && !openingbalance.getText().isEmpty()) {
            if (password.getText().equals(confrimpassword.getText())) {
                String date = null;
                try {
                    date = dateFormat.format(dob.getDate());

                    try {
                        String q = "insert into user(username,password,first_name,last_name,email,mobile,dob,address,adharcard_number,account_balance,gender,pin,account_number,ifsc_code) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        preparedStatement = connection.prepareStatement(q);
                        preparedStatement.setString(1, enterUsername.getText());
                        preparedStatement.setString(2, password.getText());
                        preparedStatement.setString(3, firstname.getText());
                        preparedStatement.setString(4, lastname.getText());
                        preparedStatement.setString(5, email.getText());
                        try {
                            Long.parseLong(mobile.getText());

                            if (mobile.getText().length() == 10) {
                                preparedStatement.setString(6, mobile.getText());
                                
                                preparedStatement.setString(7, date);
                                preparedStatement.setString(8, address.getText());
                                try {
                                    Long.parseLong(adharcard.getText());
                                    if (adharcard.getText().length() == 12) {
                                        preparedStatement.setString(9, adharcard.getText());
                                        try {
                                            Double.parseDouble(openingbalance.getText());
                                            if (Integer.parseInt(openingbalance.getText()) >= 1000) {
                                                preparedStatement.setString(10, openingbalance.getText());

                                                long min = 32000000000L;
                                                long max = 33999999999L;
                                                long i = (long) (Math.random() * (max - min + 1) + min);
                                                String s = String.valueOf(i);
                                                preparedStatement.setString(13, s);

                                                String s1 = "MPIN4528364";
                                                preparedStatement.setString(14, s1);

                                                if (male.isSelected()) {
                                                    preparedStatement.setString(11, male.getText());
                                                } else if (female.isSelected()) {
                                                    preparedStatement.setString(11, female.getText());
                                                } else {
                                                    preparedStatement.setString(11, other.getText());
                                                }
                                                try {
                                                    Integer.parseInt(pin.getText());
                                                    if (pin.getText().length() == 4) {
                                                        preparedStatement.setString(12, pin.getText());
                                                        preparedStatement.executeUpdate();

                                                        try {
                                                            Login login = new Login();
                                                            login.show();
                                                            dispose();
                                                        } catch (ClassNotFoundException | SQLException ex) {
                                                            System.out.println(ex);
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog(this, "Pin contains only 4 digits");
                                                    }
                                                } catch (Exception e) {
                                                    JOptionPane.showMessageDialog(this, "Pin must be a integer");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(this, "Minimum opening balance is 1000 Rupees");
                                            }
                                        } catch (Exception e) {
                                            JOptionPane.showMessageDialog(this, "Balance must be a numberic value");
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Adhar number contains only 12 digits");
                                    }
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(this, "Adhar number must be integer");
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Mobile number contains only 10 digits");
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Mobile number must be integer");
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Date must not be empty or incorrect");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Confrim pswd not matched with password");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Required fields must not be empty");
        }
    }//GEN-LAST:event_submitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        HomePage homePage = new HomePage();
        homePage.show();
        dispose();
    }//GEN-LAST:event_backActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:

        enterUsername.setText(null);
        password.setText(null);
        confrimpassword.setText(null);
        firstname.setText(null);
        lastname.setText(null);
        mobile.setText(null);
        email.setText(null);
        buttonGroup1.clearSelection();
        dob.setCalendar(null);
        address.setText(null);
        adharcard.setText(null);
        openingbalance.setText(null);
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Signup().setVisible(true);
                } catch (ClassNotFoundException | SQLException ex) {
                    System.out.println(ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField adharcard;
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPasswordField confrimpassword;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField email;
    private javax.swing.JTextField enterUsername;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel gender;
    private javax.swing.JLabel home_page;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField lastname;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mobile;
    private javax.swing.JTextField openingbalance;
    private javax.swing.JRadioButton other;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField pin;
    private javax.swing.JButton reset;
    private javax.swing.JButton submit;
    private javax.swing.JLabel username;
    private javax.swing.JLabel username1;
    private javax.swing.JLabel username10;
    private javax.swing.JLabel username11;
    private javax.swing.JLabel username2;
    private javax.swing.JLabel username3;
    private javax.swing.JLabel username4;
    private javax.swing.JLabel username5;
    private javax.swing.JLabel username6;
    private javax.swing.JLabel username7;
    private javax.swing.JLabel username8;
    private javax.swing.JLabel username9;
    private javax.swing.JLabel xyz;
    // End of variables declaration//GEN-END:variables
}
